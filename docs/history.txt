###############################################################################################################
#    history.txt   Copyright (C) <2025>  <Kevin Scott>                                                        #
#                                                                                                             #
#    History file for pyWeatherApps                                                                           #
#                                                                                                             #
#                                                                                                             #
###############################################################################################################
#                                                                                                             #
#    This program is free software: you can redistribute it and/or modify it under the terms of the           #
#    GNU General Public License as published by the Free Software Foundation, either Version 3 of the         #
#    License, or (at your option) any later Version.                                                          #
#                                                                                                             #
#    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without        #
#    even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
#    GNU General Public License for more details.                                                             #
#                                                                                                             #
#    You should have received a copy of the GNU General Public License along with this program.               #
#    If not, see <http://www.gnu.org/licenses/>.                                                              #
#                                                                                                             #
###############################################################################################################

The project was originally written in SQL, this has got complex to my simple mind.
So, rewriting the project in Pandas - it looks simpler [we shall soon see].

NB : The program is run from the command line and display it's results there.


The pandas version with working yearly, monthly and all time reports weights in about 750 line of code,
where the SQL version was 1200 lines of code - and not sure if this worked correctly.


V2025.28     [27 MAY 2025]

    Corrected a bug where the mean presurre values was being displayed in the consecutive rain/draught section.
    Corrected a bug where the incorrect date format was being used in config.py.


V2025.27     [16 April 2025]

    Added min and mean records for the month and year to the all time and yearly reports.
    Added the first and last data dates to the all time report.
    If a year 2023 report is displayed the message "** only from July 2023 **" is added.
    If a year 2024 report is displayed the message "** No data through 3 July 2024 - 22 October 2024 due to a faulty temperature sensor. **" is added.


V2025.26     [16 March 2025]

    Because of a bug in the Ecowitt software, the yearly rain sum is not reset at new year.
    Added a new function to calculate the total rain for a given year.
        The yearly report will display the rain for that year.
        The all time report will display the year with the greatest rainfall.


V2025.25     [16 March 2025]

    Corrected a couple of bugs and a few enhancements.

    Corrected a bug with the start date when zapping the data and file stores.
    Corrected a bug where supplying a future day was not caught.
    Corrected a bug where a missing year was not caught correctly with the month report.

    Added the start and end dates to the title of the All Time Records display.
    Made the displaying of command line errors simpler.


V2025.24     [15 March 2025]

    Corrected a bug, creating in the last version.
        Calling the wrong licence display on application start.


V2025.23     [15 March 2025]

    Added a dataclass to hold the command line arguments.
        This simplifies the passing of arguments to the main script.

---------------------------------------------------------------------------------------------------
File                                                            blank        comment           code
---------------------------------------------------------------------------------------------------
pyWeather - Pandas\src\utils\weatherUtils.py                       38             39            174
pyWeather - Pandas\src\config.py                                   40             37            134
pyWeather - Pandas\src\args.py                                     29             63            125
pyWeather - Pandas\src\classes\dataStore.py                        37             61            113
pyWeather - Pandas\src\classes\fileStore.py                        23             82            100
pyWeather - Pandas\src\classes\records.py                          22             42            100
pyWeather - Pandas\src\classes\plotting.py                         29             47             89
pyWeather - Pandas\src\classes\reports.py                          39             53             88
pyWeather - Pandas\main.py                                         21             28             65
pyWeather - Pandas\src\classes\periodStore.py                      11             53             44
pyWeather - Pandas\src\utils\dataUtils.py                          25             34             39
pyWeather - Pandas\src\projectPaths.py                              7             29             32
pyWeather - Pandas\src\timer.py                                    16             40             31
pyWeather - Pandas\ruff.toml                                        7              8             30
pyWeather - Pandas\src\license.py                                   8             35             23
pyWeather - Pandas\src\Exceptions.py                                6             20             22
pyWeather - Pandas\config.toml                                      2              5             19
pyWeather - Pandas\src\logger.py                                   11             28             18
pyWeather - Pandas\src\console.py                                   9             28             12
pyWeather - Pandas\src\classes\monthlyRecords.py                   13             30             11
pyWeather - Pandas\src\classes\yearlyRecords.py                    10             30              9
pyWeather - Pandas\src\classes\dailyRecords.py                     10             30              7
pyWeather - Pandas\src\classes\allTimeRecords.py                   11             32              6
---------------------------------------------------------------------------------------------------
SUM:                                                              424            854           1291
---------------------------------------------------------------------------------------------------

V2025.22     [12 March 2025]

    Added a new report, record values for a given month across all years.
        Added a command line argument, -T, to display this report.

    Moved some duplicate code form the report generating methods into a separate function in reports.py.


V2025.21     [9 March 2025]

    Added the total number of sunny / dull days in a given period.
        Added to the all time, yearly and monthly reports.

    Also, simplified the logic when building the displayed table.


V2025.20     [3 March 2025]

    When the dataStore is built, it now keeps track on the start and end dates, plus the number of day files..
        These are stored in the config file.
        Mainly used in the display info, at the moment.
        These are also reset when the stores are zapped.

    Corrected the level of solar for measuring sunshine.
        The threshold was 1000000 Lux, but the value is returned as fc [foortCandles.].
        A conversion is made - looks a lot better now.
    Corrected a bug when the command line arguments return a day and it is tested against the days in the month.


V2025.19     [27 February 2025]

    Added a new function to check for periods in days for the sun to shine or not.
        Sunshine is defined by a Solar value of over 100000 Lux [1000 Klux].
        Added function to all reports.

    Amended the display table to include the extra functions, instead of printing underneath.


V2025.18     [24 February 2025]

    Corrected a bug when running the day report for 13 January 2025 - but okay for many other days.
        It was found that a NaN value was causing the problem.
        When the dataStore is built, all non numeric values are forced to NaN.
        Added to the build, that all NaN values are then converted to zero.

    Also, all the reports were re-indexing within a loop, moved re-indexing out of the loop.
    Added a zap option to the periodStore.


V2025.17     [24 February 2025]

    Added the Dry / Raining period check to the Yearly, Monthly and daily reports.

    Corrected a bug in args.pry - it was looking for a month in error.
    Corrected a bug in the display table, incorrect symbols on some the amounts.


V2025.16     [23 February 2025]

    Added two new functions in weatherUtils.py
    The return the longest wet and dry periods, one looks for consecutive hours and the second in days.
    The info is currently displayed below the table and only for the all time records.
        Will add to the others when it has been validated.

    The date and time the report is run is also displayed under the table.

    Currently running Python V3.13.2 - updated all requirements


V2025.15     [3 February 2025]

    Added a third date option "Day", along side "month" and "year"
    If the day option is selected, that the values for year, month and date need to be given.
        the input validation in args has been improved.
    The max, min table is displayed, along with the line plot if required.


V2025.14     [1 February 2025]

    Added a Period Store, which holds the (year, month) of valid data.
        This is compiled as the data files are processed.
        This makes validating year and month arguments easier.
        Removed the year entry from the config file.


V2025.13     [31 January 2025]

    Added the parameters for the graph to the config files.
        i.e. x pos, y pos, width height and line colour etc.


V2025.12     [29 January 2025]

    Added line graphs.
    If a table is displayed, then their is an option to produce a line graph from one of the columns.
        The data column is also supplied from the command line.
        The line graph is generated by Matplotlib.


---------------------------------------------------------------------------------------------------
File                                                            blank        comment           code
---------------------------------------------------------------------------------------------------
pyWeather - Pandas\src\classes\fileStore.py                        23             82            100
pyWeather - Pandas\src\classes\reports.py                          41             45             93
pyWeather - Pandas\src\args.py                                     23             39             80
pyWeather - Pandas\src\classes\dataStore.py                        28             57             80
pyWeather - Pandas\src\classes\records.py                          22             44             63
pyWeather - Pandas\src\config.py                                   22             35             58
pyWeather - Pandas\main.py                                         19             28             44
pyWeather - Pandas\src\utils\dataUtils.py                          25             34             39
pyWeather - Pandas\src\projectPaths.py                              7             29             32
pyWeather - Pandas\src\timer.py                                    16             40             31
pyWeather - Pandas\ruff.toml                                        7              8             30
pyWeather - Pandas\src\license.py                                   8             35             23
pyWeather - Pandas\src\Exceptions.py                                6             20             22
pyWeather - Pandas\src\logger.py                                   11             28             18
pyWeather - Pandas\src\console.py                                   9             28             12
pyWeather - Pandas\src\classes\yearlyRecords.py                    10             30              9
pyWeather - Pandas\config.toml                                      4              5              7
pyWeather - Pandas\src\classes\monthlyRecords.py                   11             30              7
pyWeather - Pandas\src\classes\allTimeRecords.py                   11             32              6
---------------------------------------------------------------------------------------------------
SUM:                                                              303            649            754
---------------------------------------------------------------------------------------------------

V2025.11     [29 January 2025]

    Changed the name of app from pyWeatherApps to pyWeather in config and projectPaths.
    Added a command line argument -info, which prints the dataFrame info.


V2025.10     [27 January 2025]

    Added the mean value for certain columns to all three reports.
    Added a check for a future month of the current year - no data yet.
    Added a check for year is 2023 and month is before July - when data starts.


V2025.9     [26 January 2025]

    Completed the third of the reports - monthly Records.
        This displays a table of the maximum and minimum values for a given month.
        The month can be supplied from the command line or if none given then taken from the config file.

    Created a requirements.txt


V2025.8     [23 January 2025]

    Completed the second of the reports - yearly Records.
        This displays a table of the maximum and minimum values for a given year.
        The year can be supplied from the command line or if none given then taken from the config file.
    Also, added a list of valid years to the config, any given year is checked against this.

    Corrected a bug in the dataFrame, it needs to be re-sorted by date after each new data add.


V2025.7     [20 January 2025]

    There was problem with the index, which was the date.
    It was held as a string, but needed to be a datetime - for grouping by month and year.
    Converting to datetime proved troublesome being an index - to me anyways.
    So, I made a numerical index and made date a regular column after conversion.
    This throw out the all time report - so, fixed this.


V2025.6     [16 January 2025]

    Added another command line argument --Zap.
        This clears both file and data stores [deletes the pickle files].
        This allows the file and data store to be re-built from scratch.


V2025.5     [16 January 2025]

    Format values correctly and add imperial equivalents to report, if appropriate.
    Formatted the date to a more UK format.


V2025.4     [16 January 2025]

    Completed the first of the reports - All Time Records.
        This displays a table of the maximum and minimum values of all time.


V2025.3     [15 January 2025]

    Completed the work on the data processing system.
    The weather data is held in a excel spreadsheet, each one is loaded into a Pandas dataFrame.
    All the data is held in one dataFrame at the moment.
    When each file is processed is marked as thus in the File Store.


V2025.2     [13 January 2025]

    Completed the work on the data file retrieval system.
    The data files are added to the File Store and then a check is made for files to be processed.


V2025.1     [11 January 2025]

    Basic framework completed.
    Most of the original project deleted.
    The app now scan the data directory for new files and produces a list of those to be processed.

